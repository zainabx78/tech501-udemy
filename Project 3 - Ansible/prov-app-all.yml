---

- name: Configure and provision the database on DB hosts
  hosts: db
  become: true  # Ensure tasks run with sudo privileges

  tasks:
    - name: Uninstall any existing MongoDB packages
      ansible.builtin.apt:
        name:
          - mongodb-org
          - mongodb-org-database
          - mongodb-org-server
          - mongodb-mongosh
          - mongodb-org-mongos
          - mongodb-org-tools
        state: absent
        purge: yes  # Remove configuration files too
        autoremove: yes  # Automatically remove any dependencies that are no longer needed

    - name: Install necessary dependencies (gnupg and curl)
      ansible.builtin.apt:
        name:
          - gnupg
          - curl
        state: present
        update_cache: yes

    - name: Download MongoDB GPG key
      ansible.builtin.shell: |
        curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | \
        sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor
      args:
        creates: /usr/share/keyrings/mongodb-server-7.0.gpg

    - name: Create MongoDB 7.0 repository list file
      ansible.builtin.shell: |
        echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | \
        sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
      args:
        creates: /etc/apt/sources.list.d/mongodb-org-7.0.list

    - name: Update apt package list
      ansible.builtin.apt:
        update_cache: yes

    - name: Install MongoDB version 7.0.6
      ansible.builtin.apt:
        name:
          - mongodb-org=7.0.6
          - mongodb-org-database=7.0.6
          - mongodb-org-server=7.0.6
          - mongodb-mongosh
          - mongodb-org-mongos=7.0.6
          - mongodb-org-tools=7.0.6
        state: present
        update_cache: yes

    - name: Check MongoDB service status (before starting)
      ansible.builtin.systemd:
        name: mongod
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Remove any existing net.bindIp section in mongod.conf
      ansible.builtin.replace:
        path: /etc/mongod.conf
        regexp: '(^net:\n(?:\s+.*\n)*)'
        replace: ''

    - name: Set bindIp to 0.0.0.0 in mongod.conf under net section
      ansible.builtin.blockinfile:
        path: /etc/mongod.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          net:
            bindIp: 0.0.0.0

    - name: Restart MongoDB service after bind IP change
      ansible.builtin.systemd:
        name: mongod
        state: restarted

    - name: Start and enable MongoDB
      service:
        name: mongod
        state: started
        enabled: true

    - name: Verify MongoDB is running
      ansible.builtin.systemd:
        name: mongod
        state: started
        enabled: yes


- name: Configure and provision the app on Web hosts
  hosts: app
  become: true  # Run tasks with sudo privileges

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Upgrade all packages
      ansible.builtin.apt:
        upgrade: dist

    - name: Install and configure nginx
      ansible.builtin.apt:
        name: nginx
        state: present

    - name: Remove all conflicting Node.js-related packages
      ansible.builtin.apt:
        name:
          - nodejs
          - libnode72
          - libnode-dev
          - npm
        state: absent
        purge: true

    - name: Remove libnode-dev if installed (to avoid conflicts)
      ansible.builtin.apt:
        name: libnode-dev
        purge: true
        state: absent  # Ensure libnode-dev is removed

    - name: Remove the old version of Node.js (if installed)
      ansible.builtin.apt:
        name: nodejs
        purge: yes
        state: absent  # Remove existing version

    - name: Remove npm
      ansible.builtin.apt:
        name: npm
        purge: yes
        state: absent

    - name: Add NodeSource repository for Node.js 20.x
      ansible.builtin.shell: |
        curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
      args:
        creates: /etc/apt/sources.list.d/nodesource.list  # Only run if the NodeSource repo isn't already added

    - name: Install Node.js
      ansible.builtin.apt:
        name: nodejs
        state: present  # Ensure Node.js is installed

    - name: Install pm2 globally
      ansible.builtin.npm:
        name: pm2
        global: true
        state: present

    - name: Clone the app from GitHub
      ansible.builtin.git:
        repo: 'https://github.com/zainabx78/tech501-sparta-app-cicd.git'  # Replace with your GitHub repo URL
        dest: /repo  # Destination folder on the target machine
        clone: yes
        update: yes
        version: main  # You can specify a different branch if necessary

    - name: Run npm install in the app directory
      ansible.builtin.command:
        cmd: npm install
        chdir: /repo/app  # Path to the app directory
        creates: /repo/app/node_modules  # Prevent running npm install again if node_modules exists

    - name: Configure nginx as reverse proxy
      ansible.builtin.copy:
        dest: /etc/nginx/sites-available/default
        content: |
          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://localhost:3000/;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
              }
          }
      notify: Restart nginx

    - name: Enable nginx and start
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: yes

    - name: Set DB_HOST environment variable in /etc/environment
      ansible.builtin.lineinfile:
        path: /etc/environment
        regexp: '^DB_HOST='
        line: 'DB_HOST=mongodb://172.31.50.177:27017'
        state: present

    - name: Run seeding of db in the app directory
      ansible.builtin.command:
        cmd: node seeds/seed.js
        chdir: /repo/app  # Path to the app directory

    # Kill existing pm2 processes-avoids errors.
    - name: Kill existing PM2 processes
      ansible.builtin.command:
        cmd: pm2 kill
      ignore_errors: yes  # Ignore errors in case PM2 is not running

    - name: Start app with pm2
      ansible.builtin.command:
        cmd: pm2 start app.js --name sparta-app
        chdir: /repo/app

  handlers:
    - name: Restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted